{
  "openapi": "3.0.1",
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "info": {
    "title": "Voitheia API",
    "description": "Api for Voitheia. Developed for the WeVsVirus hackathon",
    "termsOfService": "https://voitheia.org/terms",
    "version": "v1"
  },
  "paths": {
    "/MyRequests": {
      "post": {
        "tags": [
          "MyRequests"
        ],
        "summary": "Add a request to the users personal request list.",
        "requestBody": {
          "description": "The required data to take a request. Right now only the request id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TakeRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TakeRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TakeRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "MyRequests"
        ],
        "summary": "Get all requests assigned to the logged in user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/MyRequests/{id}": {
      "get": {
        "tags": [
          "MyRequests"
        ],
        "summary": "Get a specific request assigned to the logged in user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "MyRequests"
        ],
        "summary": "Cancel a previously taken request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MyRequests"
        ],
        "summary": "Updates the status of a request. Currently only close is supported",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/Request": {
      "post": {
        "tags": [
          "Request"
        ],
        "summary": "Inserts a request to the database\r\nReturns 201 if success\r\nReturns 400 if the Request dto was malformed\r\nReturns 424 if the Address was invalid",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRequestResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRequestResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRequestResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "424": {
            "description": "Client Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Get all requests in a specific area if longitude and latitude is not given,\r\nthe registered address of the user is taken",
        "parameters": [
          {
            "name": "longitude",
            "in": "query",
            "description": "Longitude in degrees, if this is not passed, the users address is taken",
            "schema": {
              "type": "number",
              "description": "Longitude in degrees, if this is not passed, the users address is taken",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "Latitude in degrees, if this is not passed, the users address is taken",
            "schema": {
              "type": "number",
              "description": "Latitude in degrees, if this is not passed, the users address is taken",
              "format": "double",
              "nullable": true
            }
          },
          {
            "name": "amount",
            "in": "query",
            "description": "How many requests to retrieve",
            "schema": {
              "type": "integer",
              "description": "How many requests to retrieve",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "metersPerimeter",
            "in": "query",
            "description": "Which perimeter should be kept in considoration",
            "schema": {
              "type": "integer",
              "description": "Which perimeter should be kept in considoration",
              "format": "int32",
              "default": 2000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllRequestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/Request/{id}": {
      "delete": {
        "tags": [
          "Request"
        ],
        "summary": "Removes a request from the Database",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Request"
        ],
        "summary": "Get request by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/LoggedIn": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Indicates whether or not a User is logged in",
        "description": "When the code reachis this function the user was successfully logged in through Windows authentication.",
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": ""
          }
        }
      }
    },
    "/api/User/Register": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JwtDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/Login": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CredentialsDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JwtDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JwtDto"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "TakeRequestDto": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "RequestStatus": {
        "enum": [
          "Open",
          "Assigned",
          "Closed"
        ],
        "type": "string",
        "description": "The status of the request"
      },
      "RequestType": {
        "enum": [
          "Shopping",
          "Childcare",
          "Medical",
          "Petcare",
          "Other"
        ],
        "type": "string",
        "description": "The type of the request"
      },
      "RequestDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "distanceToUser": {
            "type": "integer",
            "description": "Distance to the currently logged in users registered address",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/RequestType"
          }
        }
      },
      "GetAllRequestResponse": {
        "type": "object",
        "properties": {
          "requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestDto"
            },
            "nullable": true
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetRequestResponse": {
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/RequestDto"
          }
        }
      },
      "PatchRequestStatus": {
        "enum": [
          "Closed"
        ],
        "type": "string"
      },
      "PatchRequestDto": {
        "type": "object",
        "properties": {
          "newRequestStatus": {
            "$ref": "#/components/schemas/PatchRequestStatus"
          }
        }
      },
      "CreateRequestDto": {
        "required": [
          "firstName",
          "lastName",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RequestType"
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the person who needs help"
          },
          "firstName": {
            "type": "string",
            "description": "The first name of the person who needs help"
          },
          "email": {
            "type": "string",
            "description": "The email of the person who needs help",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "description": "The phone number of the person who needs help",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "The street address of the person who needs help",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "description": "The zip of the person who needs help",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "The city of the person who needs help",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Comment for the request",
            "nullable": true
          }
        },
        "description": "The DTO for requests"
      },
      "CreateRequestResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RegisterUserDTO": {
        "required": [
          "city",
          "country",
          "email",
          "firstName",
          "lastName",
          "password",
          "street"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "street": {
            "type": "string"
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "JwtDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CredentialsDTO": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      }
    }
  }
}